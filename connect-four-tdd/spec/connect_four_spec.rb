require './lib/connect_four.rb'

describe ConnectFour do
  describe '#create_2d_array' do
    it 'creates the board for the connect four game' do
      game = ConnectFour.new
      expect(game.arr).to eql([["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                               ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                               ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                               ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                               ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                               ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"]
                              ])
    end
  end

  describe '#win?' do
    it 'checks for a winner on line' do
      game = ConnectFour.new
      game.arr = [["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[ ]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[ ]", "[ ]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[0]", "[0]", "[0]", "[0]", "[1]", "[ ]", "[ ]"]
                 ]
      game.win?                 
      expect(game.winner).to eql(0)
    end

    it 'checks for a winner on column' do
      game = ConnectFour.new
      game.arr = [["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[ ]", "[ ]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[ ]", "[0]", "[1]", "[0]", "[0]", "[ ]"],
                  ["[0]", "[0]", "[0]", "[1]", "[1]", "[0]", "[ ]"]
                 ]
      game.win?
      expect(game.winner).to eql(1)
    end

    it "checks for a winner on 'secondary' diagonal" do
      game = ConnectFour.new
      game.arr = [["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[ ]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[1]", "[0]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[1]", "[0]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[0]", "[1]", "[1]", "[0]", "[ ]", "[ ]"],
                  ["[1]", "[0]", "[0]", "[1]", "[1]", "[ ]", "[ ]"]
                 ]
      game.win?
      expect(game.winner).to eql(1)
    end

    it "checks for a winner on 'primary' diagonal" do
      game = ConnectFour.new
      game.arr = [["[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[ ]", "[ ]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[0]", "[1]", "[0]", "[ ]", "[ ]", "[ ]"],
                  ["[ ]", "[1]", "[1]", "[1]", "[ ]", "[ ]", "[ ]"],
                  ["[1]", "[0]", "[1]", "[1]", "[0]", "[ ]", "[ ]"],
                  ["[0]", "[0]", "[0]", "[1]", "[1]", "[ ]", "[ ]"]
                 ]
      game.win?
      expect(game.winner).to eql(1)
    end

  end
end